#ifndef HEX_TXT_H_INCLUDED
#define HEX_TXT_H_INCLUDED

#include <FreematicsSD.h>
#include <SPIFFS.h>
#include <FS.h>

class HexTxt{
    public:
        HexTxt() {}
        ~HexTxt(){};

        bool convert_bin2text(void);
        uint8_t convert_text2bin(const char* str, uint8_t* bytes, size_t blen);
        bool convert_text2binSD(SDLib::File txtFile, SDLib::File binFile);
        bool convert_text2binSPIFFS(fs::File txtFile, fs::File binFile);

    private:
        // mapping of ASCII characters to hex values, do not touch
        const uint8_t hashmap[256] ={
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //  !"#$%&'
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ()*+,-./
                0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, // 01234567
                0x08, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 89:;<=>?
                0x00, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x00, // @ABCDEFG
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // HIJKLMNO
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // PQRSTUVW
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // XYZ[\]^_
                0x00, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x00, // `abcdefg
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // hijklmno
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pqrstuvw
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // xyz{|}~.
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ........
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  // ........
        };
};

#endif